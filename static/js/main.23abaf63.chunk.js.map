{"version":3,"sources":["components/login.js","assets/user-circle-solid.svg","components/user/userNavBar.js","components/user/eventForm.js","assets/plus-circle-solid.svg","components/user/eventFilterBar.js","assets/star-regular.svg","assets/star-solid.svg","components/user/eventTable.js","components/user/profile.js","components/user/userAccount.js","apiClient.js","components/App.js","reportWebVitals.js","index.js"],"names":["Login","props","state","loginDisabled","signupDisabled","e","preventDefault","this","setState","client","logIn","target","username","value","password","then","response","_id","data","_doc","login","token","catch","err","alert","console","log","signUp","status","toastr","success","error","finally","document","getElementById","reset","Container","className","Card","style","width","Body","Form","onSubmit","submitLogin","Group","controlId","id","placeholder","type","name","Button","variant","React","Component","UserNavBar","href","Nav","to","height","src","UserIcon","alt","EventForm","deleteEvent","a","updating","redirectToReferrer","fetchEvents","event","location","date","time","description","favourite","disabled","getEvent","match","manageEventUpdate","params","newEvent","updateEvent","user","userInfo","userName","createEvent","formReset","exact","onChange","handleFormChange","submitNewEvent","htmlFor","required","rows","onClick","display","EventFilterBar","filter","currentTarget","filterFunction","allEvents","length","handleFilterInputs","selected","AddIcon","EventTable","favouriteEvent","events","buildEventRows","map","favstar","star","Table","responsive","striped","bordered","hover","Profile","updateUser","updateUserName","warning","Tabs","defaultActiveKey","Tab","eventKey","title","calcUserEvents","logout","submitProfileUpdate","userId","autoComplete","UserAccount","filterEvents","eventsByDate","sort","b","Date","filteredEvents","favourites","getEvents","fetchUser","getUser","path","render","url","ApiClient","logoutFunction","method","axios","headers","authorization","Promise","reject","createUserAction","App","window","localStorage","setItem","isLoggedIn","removeItem","undefined","getItem","apiClient","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.23abaf63.chunk.js","sourcesContent":["import React from 'react'\r\nimport toastr from 'toastr'\r\nimport 'toastr/build/toastr.min.css'\r\nimport {Card} from 'react-bootstrap'\r\nimport {Form} from 'react-bootstrap'\r\nimport {Container} from 'react-bootstrap'\r\nimport {Button} from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loginDisabled: false,\r\n            signupDisabled: false\r\n        }\r\n    }\r\n\r\n    submitLogin(e) {\r\n        e.preventDefault()\r\n        this.setState({loginDisabled: true})\r\n        this.props.client.logIn(e.target.username.value, e.target.password.value)\r\n        .then(response => {\r\n            this.setState({loginDisabled: false})\r\n            let {_id} = response.data._doc\r\n            this.props.login(_id, response.data.token)\r\n        })\r\n        .catch(err => {\r\n            alert(\"Unable to login at this time\")\r\n            console.log(err)\r\n            this.setState({loginDisabled: false})\r\n        })\r\n    }\r\n\r\n    submitSignUp(e) {\r\n        e.preventDefault();\r\n        this.setState({signupDisabled: true})\r\n        this.props.client.signUp(e.target.username.value, e.target.password.value)\r\n            .then(response => {\r\n                if(response.status === 200) {\r\n                    toastr.success(`User created: ${e.target.username.value}`)\r\n                } else {\r\n                    toastr.error('An error occured.')\r\n                }\r\n                this.setState({signupDisabled: false})\r\n            })\r\n            .catch(err => {\r\n                alert(\"Unable to signup at this time\")\r\n                console.log(err)\r\n                this.setState({signupDisabled: false})\r\n            })\r\n            .finally(() => document.getElementById('signup-form').reset())\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container className=\"mt-5 d-flex justify-content-center align-items-center\">\r\n                <Card style={{ width: '18rem' }} className=\"login-container\">\r\n                <Card.Body>\r\n                    <Form onSubmit={(e) => this.submitLogin(e)}>\r\n                        <Form.Group controlId=\"formBasicEmail\" id=\"login-form\">\r\n                            <input style={{width: \"100%\"}} placeholder=\"Username\" className=\"input-styled\" type=\"username\" name=\"username\" />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <input style={{width: \"100%\"}} placeholder=\"Password\" className=\"input-styled\"type=\"Password\" name=\"password\" />\r\n                        </Form.Group>\r\n                        <Button variant=\"btn button\" className=\"my-2\" type=\"submit\">\r\n                            Login\r\n                        </Button>\r\n                    </Form>\r\n                    <small>Sample username: mike, july, keith<br/> Sample password: test</small>\r\n                </Card.Body>\r\n                </Card>\r\n\r\n                {/* <Card style={{ width: '18rem' }}>\r\n                <Card.Header>\r\n                    Signup\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <Form onSubmit={(e) => this.submitSignUp(e)} id=\"signup-form\">\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Create Username</Form.Label>\r\n                            <Form.Control type=\"username\" name=\"username\" required/>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Label>Create Password</Form.Label>\r\n                            <Form.Control type=\"Password\" name=\"password\" required/>\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Signup\r\n                        </Button>\r\n                    </Form>\r\n                </Card.Body>\r\n                </Card> */}\r\n            \r\n            </Container>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Login","export default __webpack_public_path__ + \"static/media/user-circle-solid.0633ff3e.svg\";","import React from 'react' \nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {Nav, Button, Container} from 'react-bootstrap'\nimport {Link} from 'react-router-dom'\nimport UserIcon from '../../assets/user-circle-solid.svg'\n\nexport default class UserNavBar extends React.Component {\n\n    render() {\n        return (\n            <header>\n                <Container>\n                     <nav className=\"py-3 d-flex\">\n                        <h3 className=\"mr-3 text-light\"href=\"#home\">E V E N T</h3>\n                        <Nav className=\"mr-auto\">\n                            <Link to=\"/full-stack-events-app/user\" className=\"mr-3 nav-link text-light\">View Events</Link>\n                        </Nav>\n                        <Link to=\"/full-stack-events-app/user/profile\">\n                            <Button variant=\"btn\" className=\"mr-2 button d-flex align-items-center\">\n                                <img height=\"20px\" className=\"mr-1\" src={UserIcon} alt=\"\"></img>Profile\n                            </Button>\n                        </Link>\n                    </nav>\n                </Container>\n            </header>\n        )\n    }\n}","import React from 'react'\r\nimport { Form } from 'react-bootstrap'\r\nimport { Button } from 'react-bootstrap'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass EventForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            event: {\r\n                name: \"\",\r\n                location: \"\",\r\n                date: \"\",\r\n                time: \"\",\r\n                description: \"\",\r\n                favourite: false\r\n            },\r\n            disabled: false,\r\n            updating: false,\r\n            redirectToReferrer: false\r\n        }\r\n    }\r\n\r\n    manageEventUpdate(id) {\r\n        if (id) {\r\n            this.setState({ updating: true })\r\n            this.props.client.getEvent(id)\r\n                .then(response => {\r\n                    let { name, location, date, time, description, favourite } = response.data[0];\r\n                    this.setState({\r\n                        event: {\r\n                            name: name,\r\n                            location: location,\r\n                            date: date,\r\n                            time: time,\r\n                            description: description,\r\n                            favourite: favourite\r\n                        }\r\n                    })\r\n                })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.match) {\r\n            this.manageEventUpdate(this.props.match.params.id)\r\n        }\r\n    }\r\n\r\n    formReset(e) {\r\n        this.setState({\r\n            event: {\r\n                name: \"\",\r\n                location: \"\",\r\n                date: \"\",\r\n                time: \"\",\r\n                description: \"\",\r\n                favourite: false,\r\n            }\r\n        })\r\n    }\r\n\r\n    handleFormChange(e) {\r\n        e.preventDefault()\r\n        let newEvent = this.state.event\r\n        newEvent[e.target.name] = e.target.value\r\n        this.setState({\r\n            event: newEvent\r\n        })\r\n    }\r\n\r\n    // delete event\r\n    deleteEvent = async (id) => {\r\n        this.props.client.deleteEvent(id)\r\n            .then(() => {\r\n                this.setState({\r\n                    updating: false,\r\n                    redirectToReferrer: true\r\n                })\r\n                this.props.fetchEvents()\r\n            })\r\n    }\r\n\r\n    // create function to handle the submit and add the event to the database\r\n    submitNewEvent(e) {\r\n        e.preventDefault()\r\n        if (this.state.updating) {\r\n            this.props.client.updateEvent(this.props.match.params.id, this.state.event)\r\n                .then(() => this.props.fetchEvents())\r\n        } else {\r\n            let user = this.props.userInfo.userName\r\n            this.props.client.createEvent({ ...this.state.event, user })\r\n                .then(() => { this.props.fetchEvents() })\r\n        }\r\n        this.formReset(e)\r\n        this.setState({\r\n            updating: false,\r\n            redirectToReferrer: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirectToReferrer) {\r\n            return <Redirect exact to=\"/full-stack-events-app/user\" />\r\n        } else {\r\n            return (\r\n                <div className=\"mb-5\">\r\n                    <h3 className=\"my-5\">{this.state.updating ? \"Update\" : \"Add New\"} Event</h3>\r\n                    <Form onChange={(e) => this.handleFormChange(e)} onSubmit={(e) => this.submitNewEvent(e)}>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"name\">Event Name</label>\r\n                            <input type=\"text\" style={{width: \"100%\"}} className=\"input-styled\" name=\"name\" value={this.state.event.name} required></input>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"location\">Event Location</label>\r\n                            <input type=\"text\" style={{width: \"100%\"}} className=\"input-styled\" name=\"location\" value={this.state.event.location} required></input>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <div className=\"col\">\r\n                                <label htmlFor=\"date\">Event Date</label>\r\n                                <input type=\"date\" name=\"date\" style={{width: \"100%\"}} className=\"input-styled\" value={this.state.event.date} required></input>\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <label htmlFor=\"time\">Event Time</label>\r\n                                <input type=\"time\" name=\"time\" style={{width: \"100%\"}} className=\"input-styled\" value={this.state.event.time} required></input>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"description\">Event Description</label>\r\n                            <textarea style={{width: \"100%\"}} className=\"input-styled\" name=\"description\" rows=\"3\" value={this.state.event.description} />\r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn button mr-3\" disabled={this.state.disabled}>{this.state.updating ? \"Update Event\" : \"Add Event\"}</button>\r\n                        <Button variant=\"outline-light\" onClick={() => this.setState({ redirectToReferrer: true })}>Cancel</Button>\r\n                    </Form>\r\n                    <Button className=\"mt-5\" variant=\"btn btn-dark\" style={ {display: this.state.updating ? \"block\" : \"none\"} } onClick={() => this.deleteEvent(this.props.match.params.id)}>Delete Event</Button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default EventForm","export default __webpack_public_path__ + \"static/media/plus-circle-solid.3a4d615f.svg\";","import React from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport AddIcon from '../../assets/plus-circle-solid.svg'\r\n\r\nclass EventFilterBar extends React.Component {\r\n\r\n    handleFilterInputs(e) {\r\n        let filter = e.currentTarget.filter.value\r\n        this.props.filterFunction(e, filter)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"filter-bar my-5 rounded d-flex justify-content-between align-items-center\">\r\n                <div>\r\n                    <h3><span className=\"text-purple\">{this.props.allEvents.length}</span> {this.props.allEvents.length === 1 ? \"Event\" : \"Events\"}</h3>\r\n                </div>\r\n                <div className=\"d-flex align-items-center\">\r\n                    <Form className=\"mr-3\" onChange={(e) => this.handleFilterInputs(e)}>\r\n                        <select id=\"filter\">\r\n                            <option value=\"recently-added\" selected>Recently Added</option>\r\n                            <option value=\"by-date\">Filter by Date</option>\r\n                            <option value=\"favourites\">Show Favourites</option>\r\n                        </select>\r\n                    </Form>\r\n                    <Link to=\"/full-stack-events-app/user/add\">\r\n                        <Button variant=\"btn button\" className=\"d-flex align-items-center\"><img height=\"20px\" className=\"mr-1\" src={AddIcon} alt=\"\" />Add Event</Button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default EventFilterBar","export default __webpack_public_path__ + \"static/media/star-regular.128d02cb.svg\";","export default __webpack_public_path__ + \"static/media/star-solid.ad4ae2e6.svg\";","import React from 'react'\r\nimport {Table} from 'react-bootstrap'\r\nimport {Button} from 'react-bootstrap'\r\nimport star from '../../assets/star-regular.svg'\r\nimport favstar from '../../assets/star-solid.svg'\r\nimport '../../App.css'\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass EventTable extends React.Component {\r\n\r\n    // add event as favourite\r\n    favouriteEvent = (id) => {\r\n        let [event] = this.props.events.filter((event) => event._id === id)\r\n        event.favourite = !event.favourite\r\n        this.props.client.updateEvent(id, event)\r\n            .then(() => this.props.fetchEvents())\r\n    }\r\n\r\n    // take all events in database as props and map over the array to produce html for each element\r\n    buildEventRows = () => {\r\n        return this.props.events.map(event => {\r\n            return <tr id={event._id}>\r\n                <td>\r\n                    <img className=\"fav-star\" alt=\"\" src={event.favourite ? favstar : star} onClick={(e) => this.favouriteEvent(event._id)}/>\r\n                    {event.name}\r\n                </td>\r\n                <td className=\"d-flex flex-column\">\r\n                    {event.date}\r\n                    <span>\r\n                    Starts at {event.time}\r\n                    </span>\r\n                </td>\r\n                <td>{event.location}</td>\r\n                <td>{event.description}</td>\r\n                <td>\r\n                    {event.user}\r\n                </td>\r\n                <td>\r\n                    <Link to={`/full-stack-events-app/user/update/${event._id}`}>\r\n                        <Button className=\"w-100\" variant=\"btn button\">Manage Event</Button>\r\n                    </Link>\r\n                </td>\r\n            </tr>\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Table responsive=\"lg\" variant=\"dark\" striped bordered hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Event</th>\r\n                            <th>Date</th>\r\n                            <th>Location</th>\r\n                            <th>Description</th>\r\n                            <th>Added by</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {this.buildEventRows()}\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EventTable","import React from 'react'\r\nimport toastr from 'toastr'\r\nimport 'toastr/build/toastr.min.css'\r\nimport { Form, Button, Table, Tab, Tabs } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class Profile extends React.Component {\r\n\r\n    calcUserEvents() {\r\n        let myEvents = this.props.events.filter(event => event.user === this.props.userInfo.userName)\r\n        return myEvents.length\r\n    }\r\n\r\n    submitProfileUpdate(e, id) {\r\n        e.preventDefault()\r\n        let username = e.currentTarget.username.value\r\n        this.props.client.updateUser(id, { username: username })\r\n            .then((response) => {\r\n                if (response.status === 200) {\r\n                    toastr.success(response.data)\r\n                    this.props.updateUserName(username)\r\n                } else {\r\n                    toastr.warning(response.data)\r\n                }\r\n            })\r\n            .finally(() => document.getElementById(\"account-form\").reset())\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2 className=\"my-5\">\r\n                    Profile\r\n                </h2>\r\n                <Tabs defaultActiveKey=\"home\" id=\"uncontrolled-tab-example\">\r\n                    <Tab eventKey=\"home\" title=\"Account Details\">\r\n                        <Table className=\"mt-3\" variant=\"dark\" bordered striped>\r\n                            <thead>\r\n                                <tr>\r\n                                    <td>\r\n                                        Username\r\n                                    </td>\r\n                                    <td>\r\n                                        Events in schedule\r\n                                    </td>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        {this.props.userInfo.userName}\r\n                                    </td>\r\n                                    <td>\r\n                                        {this.calcUserEvents()}\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </Table>\r\n                        <Link to=\"/full-stack-events-app\">\r\n                            <Button variant=\"btn button\" onClick={() => this.props.logout()}>\r\n                                Logout\r\n                            </Button>\r\n                        </Link>\r\n                    </Tab>\r\n                    <Tab eventKey=\"profile\" title=\"Edit Account\">\r\n                        <Form className=\"mt-3\" id=\"account-form\" onSubmit={(e) => this.submitProfileUpdate(e, this.props.userInfo.userId)}>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"username\" className=\"text-light\"> Change Username</label>\r\n                                <input style={{width: \"100%\"}} className=\"input-styled\" type=\"text\" id=\"username\" name=\"username\" placeholder=\"new username\" autoComplete=\"off\" />\r\n                            </div>\r\n                            {/* <div className=\"form-group row\">\r\n                            <div className=\"col\">\r\n                                <label htmlFor=\"password\">Current password</label>\r\n                                <input className=\"form-control\" type=\"password\" name=\"password\" id=\"password\" />\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <label htmlFor=\"password\">New password</label>\r\n                                <input className=\"form-control\" type=\"password\" name=\"password\" id=\"password\" />\r\n                            </div>\r\n                        </div> */}\r\n                            <Button type=\"submit\" variant=\"btn button\">Submit</Button>\r\n                        </Form>\r\n                    </Tab>\r\n                </Tabs>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport UserNavBar from './userNavBar'\r\nimport EventForm from './eventForm'\r\nimport EventFilterBar from './eventFilterBar'\r\nimport EventTable from './eventTable'\r\nimport Profile from './profile'\r\nimport {Container} from 'react-bootstrap'\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\r\n\r\nclass UserAccount extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: {\r\n                userId: \"\",\r\n                userName: \"\"\r\n            },\r\n            allEvents: [],\r\n            filteredEvents: []\r\n        }\r\n    }\r\n\r\n    filterEvents = (e, filter) => {\r\n        e.preventDefault()\r\n        if (filter === \"by-date\") {\r\n            let eventsByDate = this.state.allEvents.sort((a, b) => new Date(a.date) - new Date(b.date))\r\n            this.setState({filteredEvents: eventsByDate})\r\n        } else if(filter === \"favourites\") {\r\n            let favourites = this.state.allEvents.filter(event => event.favourite === true)\r\n            this.setState({filteredEvents: favourites})\r\n        } else {\r\n            this.fetchEvents()\r\n        }\r\n    }\r\n\r\n    fetchEvents = async () => {\r\n        let response = await this.props.client.getEvents()\r\n        this.setState( { allEvents: response.data, filteredEvents: response.data } )\r\n    }\r\n\r\n    fetchUser = async (id) => {\r\n        let response = await this.props.client.getUser(id)\r\n        this.setState( { user: {userId: id, userName: response.data.username} } )\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchEvents()\r\n        this.fetchUser(this.props.userId)\r\n    }\r\n\r\n    updateUserName = (username) => {\r\n        this.setState({user: {userName: username}})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Router>\r\n                <UserNavBar/>\r\n                <Container>\r\n                    <Switch>\r\n                        <Route exact path=\"/full-stack-events-app/user\">\r\n                            <EventFilterBar filterFunction={this.filterEvents} allEvents={this.state.allEvents}/>\r\n                            <EventTable client={this.props.client} events={this.state.filteredEvents} fetchEvents={this.fetchEvents} updateEvent={this.updateEvent}/>\r\n                        </Route>\r\n                        <Route exact path=\"/full-stack-events-app/user/add\">\r\n                            <EventForm userInfo={this.state.user} client={this.props.client}  fetchEvents={this.fetchEvents} updating={this.state.updating}/>\r\n                        </Route>\r\n                        <Route exact path=\"/full-stack-events-app/user/update/:id\" render={(props) => <EventForm {...props} client={this.props.client} fetchEvents={this.fetchEvents} /> } />\r\n                        <Route exact path=\"/full-stack-events-app/user/profile\">\r\n                            <Profile logout={this.props.logout} updateUserName={this.updateUserName} userInfo={this.state.user} client={this.props.client} events={this.state.allEvents}/>\r\n                        </Route>\r\n                    </Switch>\r\n                </Container>\r\n                </Router>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserAccount","import axios from 'axios'\r\nconst url = 'https://fs-events-app.herokuapp.com/'\r\n\r\nexport default class ApiClient {\r\n    constructor(token, logoutFunction) {\r\n        this.token = token;\r\n        this.logoutFunction = logoutFunction\r\n    }\r\n\r\n    createUserAction(method, url, data) {\r\n        return axios({\r\n            method: method,\r\n            url: url,\r\n            headers: {\r\n                authorization: this.token()\r\n            },\r\n            data\r\n        })\r\n        .catch(err => {\r\n            if(err.response === 403) {\r\n                this.logoutFunction()\r\n                return Promise.reject()\r\n            } else {\r\n                throw err\r\n            }\r\n        })\r\n    }\r\n\r\n    async logIn(username, password) {\r\n        return await axios({\r\n            method: 'post',\r\n            url: `${url}auth`,\r\n            data: {\r\n                username,\r\n                password\r\n            }\r\n        })\r\n    }\r\n    \r\n    async signUp(username, password) {\r\n        return await axios({\r\n            method: 'post',\r\n            url: `${url}signup`,\r\n            data: {\r\n                username,\r\n                password\r\n            }\r\n        }) \r\n    }\r\n    // get user info\r\n    getUser(id) {\r\n        return this.createUserAction('get', `${url}user/${id}`)\r\n    }\r\n    // update user info\r\n    updateUser(id, user) {\r\n        return this.createUserAction('put', `${url}user/${id}`, user)\r\n    }\r\n    // create new event in database\r\n    createEvent(event) {\r\n        return this.createUserAction('post', url, event)\r\n    }\r\n    // get events from database\r\n    getEvents() {\r\n        return this.createUserAction('get', url)\r\n    }\r\n    // get event from database by id\r\n    getEvent(id) {\r\n        return this.createUserAction('get', `${url}${id}`)\r\n    }\r\n    //delete event  from databse\r\n    deleteEvent(id) {\r\n        return this.createUserAction('delete', `${url}${id}`)\r\n    }\r\n    // update event favourite status\r\n    updateEvent(id, event) {\r\n        return this.createUserAction('put', `${url}${id}`, event)\r\n    }\r\n}\r\n\r\n","import React from 'react';\nimport Login from './login'\nimport UserAccount from './user/userAccount'\nimport ApiClient from '../apiClient'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      token: window.localStorage.getItem(\"token\"),\n      userId: window.localStorage.getItem(\"UserId\"),\n      isLoggedIn: false\n    }\n    this.apiClient = new ApiClient(\n      () => this.state.token,\n      () => this.logout()\n    )\n  }\n\n\n  login = (userId, token) => {\n    window.localStorage.setItem(\"token\", token)\n    window.localStorage.setItem(\"UserId\", userId)\n    this.setState({\n      token: token,\n      userId: userId,\n      isLoggedIn: true\n    })\n  }\n\n  logout = () => {\n    window.localStorage.removeItem(\"token\")\n    window.localStorage.removeItem(\"UserId\")\n    this.setState({\n      token: undefined,\n      userId: undefined,\n      isLoggedIn: false\n    })\n  }\n\n  render() {   \n      if(this.state.isLoggedIn) {\n        return <UserAccount userId={this.state.userId} client={this.apiClient} logout={this.logout}/>\n      } else {\n        return <Login login={this.login} client={this.apiClient}/>\n      }\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}