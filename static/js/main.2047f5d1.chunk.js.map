{"version":3,"sources":["components/login.js","components/user/userNavBar.js","components/user/eventForm.js","components/user/eventFilterBar.js","assets/star-regular.svg","assets/star-solid.svg","components/user/eventTable.js","components/user/profile.js","components/user/userAccount.js","apiClient.js","components/App.js","reportWebVitals.js","index.js"],"names":["Login","props","state","loginDisabled","signupDisabled","e","preventDefault","this","setState","client","logIn","target","username","value","password","then","response","_id","data","_doc","login","token","catch","err","alert","console","log","signUp","status","toastr","success","error","finally","document","getElementById","reset","Container","className","Card","style","width","Header","Body","Form","onSubmit","submitLogin","Group","controlId","id","Label","Control","type","name","Button","variant","React","Component","UserNavBar","Navbar","bg","to","Brand","href","Nav","onClick","logout","EventForm","event","location","date","time","description","favourite","disabled","updating","redirectToReferrer","getEvent","match","manageEventUpdate","params","newEvent","updateEvent","fetchEvents","user","userInfo","userName","createEvent","formReset","onChange","handleFormChange","submitNewEvent","htmlFor","required","rows","EventFilterBar","filter","currentTarget","filterFunction","handleFilterInputs","class","selected","EventTable","deleteEvent","favouriteEvent","events","buildEventRows","map","src","favstar","star","Table","responsive","striped","bordered","hover","Profile","length","updateUser","updateUserName","warning","Tabs","defaultActiveKey","Tab","eventKey","title","calcUserEvents","submitProfileUpdate","userId","placeholder","UserAccount","filterEvents","eventsByDate","allEvents","sort","a","b","Date","filteredEvents","favourites","getEvents","fetchUser","getUser","exact","path","render","url","ApiClient","logoutFunction","method","axios","headers","authorization","Promise","reject","createUserAction","App","window","localStorage","setItem","isLoggedIn","removeItem","undefined","getItem","apiClient","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.2047f5d1.chunk.js","sourcesContent":["import React from 'react'\r\nimport toastr from 'toastr'\r\nimport 'toastr/build/toastr.min.css'\r\nimport {Card} from 'react-bootstrap'\r\nimport {Form} from 'react-bootstrap'\r\nimport {Container} from 'react-bootstrap'\r\nimport {Button} from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loginDisabled: false,\r\n            signupDisabled: false\r\n        }\r\n    }\r\n\r\n    submitLogin(e) {\r\n        e.preventDefault()\r\n        this.setState({loginDisabled: true})\r\n        this.props.client.logIn(e.target.username.value, e.target.password.value)\r\n        .then(response => {\r\n            this.setState({loginDisabled: false})\r\n            let {_id} = response.data._doc\r\n            this.props.login(_id, response.data.token)\r\n        })\r\n        .catch(err => {\r\n            alert(\"Unable to login at this time\")\r\n            console.log(err)\r\n            this.setState({loginDisabled: false})\r\n        })\r\n    }\r\n\r\n    submitSignUp(e) {\r\n        e.preventDefault();\r\n        this.setState({signupDisabled: true})\r\n        this.props.client.signUp(e.target.username.value, e.target.password.value)\r\n            .then(response => {\r\n                if(response.status === 200) {\r\n                    toastr.success(`User created: ${e.target.username.value}`)\r\n                } else {\r\n                    toastr.error('An error occured.')\r\n                }\r\n                this.setState({signupDisabled: false})\r\n            })\r\n            .catch(err => {\r\n                alert(\"Unable to signup at this time\")\r\n                console.log(err)\r\n                this.setState({signupDisabled: false})\r\n            })\r\n            .finally(() => document.getElementById('signup-form').reset())\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container className=\"mt-5 d-flex justify-content-center\">\r\n                <Card style={{ width: '18rem' }}>\r\n                <Card.Header>\r\n                    Login\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <Form onSubmit={(e) => this.submitLogin(e)}>\r\n                        <Form.Group controlId=\"formBasicEmail\" id=\"login-form\">\r\n                            <Form.Label>Username</Form.Label>\r\n                            <Form.Control type=\"username\" name=\"username\" />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"Password\" name=\"password\" />\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Login\r\n                        </Button>\r\n                    </Form>\r\n                    <small>username: mike, keith, july <br/> password: test</small>\r\n                </Card.Body>\r\n                </Card>\r\n\r\n                {/* <Card style={{ width: '18rem' }}>\r\n                <Card.Header>\r\n                    Signup\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <Form onSubmit={(e) => this.submitSignUp(e)} id=\"signup-form\">\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Create Username</Form.Label>\r\n                            <Form.Control type=\"username\" name=\"username\" required/>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Label>Create Password</Form.Label>\r\n                            <Form.Control type=\"Password\" name=\"password\" required/>\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Signup\r\n                        </Button>\r\n                    </Form>\r\n                </Card.Body>\r\n                </Card> */}\r\n            \r\n            </Container>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Login","import React from 'react' \r\nimport {Navbar} from 'react-bootstrap'\r\nimport {Nav} from 'react-bootstrap'\r\nimport {Button} from 'react-bootstrap'\r\nimport {Container} from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default class UserNavBar extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar bg=\"light\" variant=\"light\" className=\"mb-5\">\r\n                    <Container>\r\n                        <Link to=\"/full-stack-events-app/user\" className=\"mr-3\"><Navbar.Brand href=\"#home\">E V E N T</Navbar.Brand></Link>\r\n                        <Nav className=\"mr-auto\">\r\n                            <Link to=\"/full-stack-events-app/user\" className=\"mr-3 nav-link\">View Events</Link>\r\n                        </Nav>\r\n                        <Link to=\"/full-stack-events-app/user/profile\"><Button variant=\"btn btn-dark\" className=\"mr-2\">Profile</Button></Link>\r\n                        <Link to=\"/full-stack-events-app\">\r\n                        <Button variant=\"outline-dark\" onClick={() => this.props.logout()}>\r\n                            Logout\r\n                        </Button>\r\n                        </Link>\r\n                    </Container>\r\n                </Navbar>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport {Form} from 'react-bootstrap'\r\nimport {Button} from 'react-bootstrap'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass EventForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            event: {\r\n                name: \"\",\r\n                location: \"\",\r\n                date: \"\",\r\n                time: \"\",\r\n                description: \"\",\r\n                favourite: false\r\n            },\r\n            disabled: false,\r\n            updating: false,\r\n            redirectToReferrer: false\r\n        }\r\n    }\r\n\r\n    manageEventUpdate(id) {\r\n        if(id) {\r\n            this.setState({updating: true})\r\n            this.props.client.getEvent(id)\r\n                .then(response => {\r\n                    let {name, location, date, time, description, favourite} = response.data[0];\r\n                    this.setState({\r\n                        event: {\r\n                            name: name,\r\n                            location: location,\r\n                            date: date,\r\n                            time: time,\r\n                            description: description,\r\n                            favourite: favourite\r\n                        }\r\n                    })\r\n                })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.match) {\r\n            this.manageEventUpdate(this.props.match.params.id)\r\n        }\r\n    }\r\n\r\n    formReset(e) {\r\n        this.setState({\r\n            event: {\r\n                name: \"\",\r\n                location: \"\",\r\n                date: \"\",\r\n                time: \"\",\r\n                description: \"\",\r\n                favourite: false,\r\n            }\r\n        })\r\n    }\r\n\r\n    handleFormChange(e) {\r\n        e.preventDefault()\r\n        let newEvent = this.state.event\r\n        newEvent[e.target.name] = e.target.value\r\n        this.setState({\r\n            event: newEvent\r\n        })\r\n    }\r\n\r\n    // create function to handle the submit and add the event to the database\r\n    submitNewEvent(e) {\r\n        e.preventDefault()\r\n        if(this.state.updating) {\r\n            this.props.client.updateEvent(this.props.match.params.id, this.state.event)\r\n                .then(() => this.props.fetchEvents())\r\n        } else {\r\n            let user = this.props.userInfo.userName\r\n            this.props.client.createEvent({...this.state.event, user})\r\n                .then(() => {this.props.fetchEvents()})\r\n        }\r\n        this.formReset(e)\r\n        this.setState({\r\n            updating: false,\r\n            redirectToReferrer: true\r\n        })\r\n        }\r\n\r\n    render() {\r\n        if(this.state.redirectToReferrer) {\r\n            return <Redirect to=\"/full-stack-events-app/user\" />\r\n        } else {\r\n            return (\r\n                <Form onChange={(e) => this.handleFormChange(e)} onSubmit={(e) => this.submitNewEvent(e)}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"name\">Event Name</label>\r\n                    <input type=\"text\" className=\"form-control\" name=\"name\" value={this.state.event.name} required></input>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"location\">Event Location</label>\r\n                    <input type=\"text\" className=\"form-control\" name=\"location\" value={this.state.event.location} required></input>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label htmlFor=\"date\">Event Date</label>\r\n                        <input type=\"date\" name=\"date\" className=\"form-control\" value={this.state.event.date} required></input>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label htmlFor=\"time\">Event Time</label>\r\n                        <input type=\"time\" name=\"time\" className=\"form-control\" value={this.state.event.time} required></input>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"description\">Event Description</label>\r\n                    <textarea className=\"form-control\" name=\"description\" rows=\"3\" value={this.state.event.description}/>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-dark mr-3\" disabled={this.state.disabled}>{this.state.updating ? \"Update Event\" : \"Add Event\"}</button>\r\n                <Button variant=\"outline-dark\" onClick={() => this.setState({redirectToReferrer: true})}>Cancel</Button>\r\n            </Form>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default EventForm","import React from 'react'\r\nimport {Form} from 'react-bootstrap'\r\nimport {Button} from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass EventFilterBar extends React.Component {\r\n\r\n    handleFilterInputs(e) {\r\n        let filter = e.currentTarget.filter.value\r\n        this.props.filterFunction(e, filter)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"filter-bar mb-5 p-3 d-flex justify-content-between rounded\">\r\n                <Form className=\"d-flex align-items-center\" onChange={(e) => this.handleFilterInputs(e)}>\r\n                <select class=\"custom-select\" id=\"filter\">\r\n                    <option value=\"recently-added\" selected>Recently Added</option>\r\n                    <option value=\"by-date\">Filter by Date</option>\r\n                    <option value=\"favourites\">Show Favourites</option>\r\n                </select>\r\n                </Form>\r\n                <Link to=\"/full-stack-events-app/user/add\">\r\n                    <Button className=\"btn btn-dark\">Add Event</Button>\r\n                </Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default EventFilterBar","export default __webpack_public_path__ + \"static/media/star-regular.8d41e0b0.svg\";","export default __webpack_public_path__ + \"static/media/star-solid.ad4ae2e6.svg\";","import React from 'react'\r\nimport {Form} from 'react-bootstrap'\r\nimport {Table} from 'react-bootstrap'\r\nimport {Button} from 'react-bootstrap'\r\nimport star from '../../assets/star-regular.svg'\r\nimport favstar from '../../assets/star-solid.svg'\r\nimport '../../App.css'\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass EventTable extends React.Component {\r\n\r\n    // delete event\r\n    deleteEvent = (id) => {\r\n        this.props.client.deleteEvent(id)\r\n            .then(() => this.props.fetchEvents())\r\n    }\r\n\r\n    // add event as favourite\r\n    favouriteEvent = (id) => {\r\n        let [event] = this.props.events.filter((event) => event._id === id)\r\n        event.favourite = !event.favourite\r\n        this.props.client.updateEvent(id, event)\r\n            .then(() => this.props.fetchEvents())\r\n    }\r\n\r\n    // take all events in database as props and map over the array to produce html for each element\r\n    buildEventRows = () => {\r\n        return this.props.events.map(event => {\r\n            return <tr id={event._id}>\r\n                <td>\r\n                    <img className=\"fav-star\" src={event.favourite ? favstar : star} onClick={(e) => this.favouriteEvent(event._id)}/>\r\n                    {event.name}\r\n                </td>\r\n                <td>{event.date}</td>\r\n                <td>{event.location}</td>\r\n                <td>{event.description}</td>\r\n                <td>\r\n                    <Link to={`/full-stack-events-app/user/update/${event._id}`}>\r\n                        <Button variant=\"btn btn-dark\">Update</Button>\r\n                    </Link>\r\n                    <Button variant=\"outline-dark\" onClick={() => this.deleteEvent(event._id)}>delete</Button>\r\n                </td>\r\n                <td>\r\n                    {event.user}\r\n                </td>\r\n            </tr>\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Table responsive=\"lg\" striped bordered hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Event</th>\r\n                            <th>Date</th>\r\n                            <th>Location</th>\r\n                            <th>Description</th>\r\n                            <th>Action</th>\r\n                            <th>Added by</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {this.buildEventRows()}\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EventTable","import React from 'react'\r\nimport toastr from 'toastr'\r\nimport 'toastr/build/toastr.min.css'\r\nimport Tabs from 'react-bootstrap/Tabs'\r\nimport Tab from 'react-bootstrap/Tab'\r\nimport {Form} from 'react-bootstrap'\r\nimport {Button} from 'react-bootstrap'\r\nimport {Table} from 'react-bootstrap'\r\n\r\nexport default class Profile extends React.Component {\r\n\r\n    calcUserEvents() {\r\n        let myEvents = this.props.events.filter(event => event.user === this.props.userInfo.userName)\r\n        return myEvents.length\r\n    }\r\n\r\n    submitProfileUpdate(e, id) {\r\n        e.preventDefault()\r\n        let username = e.currentTarget.username.value\r\n        this.props.client.updateUser(id, {username: username})\r\n            .then((response) => {\r\n                if(response.status === 200) {\r\n                    toastr.success(response.data)\r\n                    this.props.updateUserName(username)\r\n                } else {\r\n                    toastr.warning(response.data)\r\n                }\r\n            })\r\n            .finally(() => document.getElementById(\"account-form\").reset())\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>\r\n                    My Profile\r\n                </h3>\r\n                <Tabs className=\"mt-5\" defaultActiveKey=\"home\" id=\"uncontrolled-tab-example\">\r\n                    <Tab eventKey=\"home\" title=\"Account Details\">\r\n                        <Table className=\"mt-3\" bordered striped>\r\n                            <thead>\r\n                                <tr>\r\n                                    <td>\r\n                                        Username\r\n                                    </td>\r\n                                    <td>\r\n                                        Events in schedule\r\n                                    </td>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        {this.props.userInfo.userName}\r\n                                    </td>\r\n                                    <td>\r\n                                        {this.calcUserEvents()}\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </Table>\r\n                    </Tab>\r\n                    <Tab eventKey=\"profile\" title=\"Edit Account\">\r\n                        <Form className=\"mt-3\" id=\"account-form\" onSubmit={(e) => this.submitProfileUpdate(e, this.props.userInfo.userId)}>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"username\"> Change Username</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"username\" name=\"username\" placeholder=\"new username\" />\r\n                        </div>\r\n                        {/* <div className=\"form-group row\">\r\n                            <div className=\"col\">\r\n                                <label htmlFor=\"password\">Current password</label>\r\n                                <input className=\"form-control\" type=\"password\" name=\"password\" id=\"password\" />\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <label htmlFor=\"password\">New password</label>\r\n                                <input className=\"form-control\" type=\"password\" name=\"password\" id=\"password\" />\r\n                            </div>\r\n                        </div> */}\r\n                        <Button type=\"submit\" variant=\"dark\">Submit</Button>\r\n                        </Form>\r\n                    </Tab>\r\n                </Tabs>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport UserNavBar from './userNavBar'\r\nimport EventForm from './eventForm'\r\nimport EventFilterBar from './eventFilterBar'\r\nimport EventTable from './eventTable'\r\nimport Profile from './profile'\r\nimport {Container} from 'react-bootstrap'\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\r\n\r\nclass UserAccount extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: {\r\n                userId: \"\",\r\n                userName: \"\"\r\n            },\r\n            allEvents: [],\r\n            filteredEvents: []\r\n        }\r\n    }\r\n\r\n    filterEvents = (e, filter) => {\r\n        e.preventDefault()\r\n        if (filter === \"by-date\") {\r\n            let eventsByDate = this.state.allEvents.sort((a, b) => new Date(a.date) - new Date(b.date))\r\n            this.setState({filteredEvents: eventsByDate})\r\n        } else if(filter === \"favourites\") {\r\n            let favourites = this.state.allEvents.filter(event => event.favourite === true)\r\n            this.setState({filteredEvents: favourites})\r\n        } else {\r\n            this.fetchEvents()\r\n        }\r\n    }\r\n\r\n    fetchEvents = async () => {\r\n        let response = await this.props.client.getEvents()\r\n        this.setState( { allEvents: response.data, filteredEvents: response.data } )\r\n    }\r\n\r\n    fetchUser = async (id) => {\r\n        let response = await this.props.client.getUser(id)\r\n        this.setState( { user: {userId: id, userName: response.data.username} } )\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchEvents()\r\n        this.fetchUser(this.props.userId)\r\n    }\r\n\r\n    updateUserName = (username) => {\r\n        this.setState({user: {userName: username}})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Router>\r\n                <UserNavBar logout={this.props.logout}/>\r\n                <Container>\r\n                    <Switch>\r\n                        <Route exact path=\"/full-stack-events-app/user\">\r\n                            <h1 className=\"mb-5\">E V E N T S</h1>\r\n                            <EventFilterBar filterFunction={this.filterEvents}/>\r\n                            <EventTable client={this.props.client} events={this.state.filteredEvents} fetchEvents={this.fetchEvents} updateEvent={this.updateEvent}/>\r\n                        </Route>\r\n                        <Route exact path=\"/full-stack-events-app/user/add\">\r\n                            <EventForm userInfo={this.state.user} client={this.props.client}  fetchEvents={this.fetchEvents} updating={this.state.updating}/>\r\n                        </Route>\r\n                        <Route exact path=\"/full-stack-events-app/user/update/:id\" render={(props) => <EventForm {...props} client={this.props.client} fetchEvents={this.fetchEvents} /> } />\r\n                        <Route exact path=\"/full-stack-events-app/user/profile\">\r\n                            <Profile updateUserName={this.updateUserName} userInfo={this.state.user} client={this.props.client} events={this.state.allEvents}/>\r\n                        </Route>\r\n                    </Switch>\r\n                </Container>\r\n                </Router>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserAccount","import axios from 'axios'\r\nconst url = 'https://fs-events-app.herokuapp.com/'\r\n\r\nexport default class ApiClient {\r\n    constructor(token, logoutFunction) {\r\n        this.token = token;\r\n        this.logoutFunction = logoutFunction\r\n    }\r\n\r\n    createUserAction(method, url, data) {\r\n        return axios({\r\n            method: method,\r\n            url: url,\r\n            headers: {\r\n                authorization: this.token()\r\n            },\r\n            data\r\n        })\r\n        .catch(err => {\r\n            if(err.response === 403) {\r\n                this.logoutFunction()\r\n                return Promise.reject()\r\n            } else {\r\n                throw err\r\n            }\r\n        })\r\n    }\r\n\r\n    async logIn(username, password) {\r\n        return await axios({\r\n            method: 'post',\r\n            url: `${url}auth`,\r\n            data: {\r\n                username,\r\n                password\r\n            }\r\n        })\r\n    }\r\n    \r\n    async signUp(username, password) {\r\n        return await axios({\r\n            method: 'post',\r\n            url: `${url}signup`,\r\n            data: {\r\n                username,\r\n                password\r\n            }\r\n        }) \r\n    }\r\n    // get user info\r\n    getUser(id) {\r\n        return this.createUserAction('get', `${url}user/${id}`)\r\n    }\r\n    // update user info\r\n    updateUser(id, user) {\r\n        return this.createUserAction('put', `${url}user/${id}`, user)\r\n    }\r\n    // create new event in database\r\n    createEvent(event) {\r\n        return this.createUserAction('post', url, event)\r\n    }\r\n    // get events from database\r\n    getEvents() {\r\n        return this.createUserAction('get', url)\r\n    }\r\n    // get event from database by id\r\n    getEvent(id) {\r\n        return this.createUserAction('get', `${url}${id}`)\r\n    }\r\n    //delete event  from databse\r\n    deleteEvent(id) {\r\n        return this.createUserAction('delete', `${url}${id}`)\r\n    }\r\n    // update event favourite status\r\n    updateEvent(id, event) {\r\n        return this.createUserAction('put', `${url}${id}`, event)\r\n    }\r\n}\r\n\r\n","import React from 'react';\nimport Login from './login'\nimport UserAccount from './user/userAccount'\nimport ApiClient from '../apiClient'\nimport {Redirect} from 'react-router-dom'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      token: window.localStorage.getItem(\"token\"),\n      userId: window.localStorage.getItem(\"UserId\"),\n      isLoggedIn: false\n    }\n    this.apiClient = new ApiClient(\n      () => this.state.token,\n      () => this.logout()\n    )\n  }\n\n\n  login = (userId, token) => {\n    window.localStorage.setItem(\"token\", token)\n    window.localStorage.setItem(\"UserId\", userId)\n    this.setState({\n      token: token,\n      userId: userId,\n      isLoggedIn: true\n    })\n  }\n\n  logout = () => {\n    window.localStorage.removeItem(\"token\")\n    window.localStorage.removeItem(\"UserId\")\n    this.setState({\n      token: undefined,\n      userId: undefined,\n      isLoggedIn: false\n    })\n  }\n\n  render() {   \n      if(this.state.isLoggedIn) {\n        return <UserAccount userId={this.state.userId} client={this.apiClient} logout={this.logout}/>\n      } else {\n        return <Login login={this.login} client={this.apiClient}/>\n      }\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}