[{"C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\index.js":"1","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\App.js":"2","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\reportWebVitals.js":"3","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\apiClient.js":"4","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\components\\protectedRoute.js":"5","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\pages\\index.js":"6","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\pages\\LoginPage.js":"7","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\pages\\AddEvent.js":"8","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\pages\\AccountPage.js":"9","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\pages\\EventsPage.js":"10","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\pages\\UpdateEvent.js":"11","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\components\\login.js":"12","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\components\\HeaderNav.js":"13","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\components\\EventsTable.js":"14","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\components\\EventsFilterBar.js":"15","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\components\\index.js":"16","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\components\\AccountDetails.js":"17","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\components\\EventForm.js":"18","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\components\\UpdateEventForm.js":"19"},{"size":478,"mtime":1616095816266,"results":"20","hashOfConfig":"21"},{"size":2483,"mtime":1616259768376,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"21"},{"size":2194,"mtime":1616327876446,"results":"24","hashOfConfig":"21"},{"size":358,"mtime":1616239677577,"results":"25","hashOfConfig":"21"},{"size":271,"mtime":1616084013856,"results":"26","hashOfConfig":"21"},{"size":244,"mtime":1616087210079,"results":"27","hashOfConfig":"21"},{"size":413,"mtime":1616235095031,"results":"28","hashOfConfig":"21"},{"size":419,"mtime":1616259023183,"results":"29","hashOfConfig":"21"},{"size":1193,"mtime":1616258010163,"results":"30","hashOfConfig":"21"},{"size":480,"mtime":1616257507407,"results":"31","hashOfConfig":"21"},{"size":2192,"mtime":1616095771735,"results":"32","hashOfConfig":"21"},{"size":1010,"mtime":1616096668109,"results":"33","hashOfConfig":"21"},{"size":1884,"mtime":1616257816286,"results":"34","hashOfConfig":"21"},{"size":1153,"mtime":1616239610841,"results":"35","hashOfConfig":"21"},{"size":346,"mtime":1616235476600,"results":"36","hashOfConfig":"21"},{"size":1850,"mtime":1616328482095,"results":"37","hashOfConfig":"21"},{"size":2883,"mtime":1616235272023,"results":"38","hashOfConfig":"21"},{"size":4478,"mtime":1616257211224,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1qgkup2",{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},"C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\index.js",[],["82","83"],"C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\App.js",["84"],"import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css'\nimport 'toastr/build/toastr.min.css';\nimport ApiClient from './apiClient'\nimport { AccountPage, AddEvent, UpdateEvent, EventsPage, LoginPage } from './pages'\nimport ProtectedRoute from './components/protectedRoute'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\n\nlet App = () => {\n  const [loggedIn, loggedInHandler] = useState(false)\n  const [user, setUser] = useState({})\n  const [events, setEvents] = useState([])\n\n  let apiClient = new ApiClient(\n    () => window.localStorage.getItem(\"EventsAppUserToken\"),\n    () => this.logout()\n  )\n\n\n    let fetchEvents = async () => {\n        let events = await apiClient.getEvents();\n        setEvents(events.data)\n    };\n    \n    \n    useEffect(() => {\n    fetchEvents()\n    if (localStorage.getItem(\"EventsAppUserToken\")) {\n      let user = localStorage.getItem(\"EventsAppUser\")\n      setUser(JSON.parse(user))\n      loggedInHandler(true)\n    } else {\n      loggedInHandler(false)\n    }\n  }, []);\n\n  let loginFunction = (user, token) => {\n    setUser(user)\n    window.localStorage.setItem(\"EventsAppUser\", JSON.stringify(user))\n    window.localStorage.setItem(\"EventsAppUserToken\", token)\n    loggedInHandler(true)\n  }\n\n  let logoutFunction = () => {\n    window.localStorage.removeItem(\"EventsAppUser\")\n    window.localStorage.removeItem(\"EventsAppUserToken\")\n    loggedInHandler(false)\n    setUser({})\n  }\n\n  return (\n    <div id=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" render={() => <LoginPage apiClient={apiClient} loggedIn={loggedIn} logInFunc={loginFunction} />} />\n          <ProtectedRoute exact path=\"/events\"\n            component={EventsPage} loggedIn={loggedIn}\n            props={{ apiClient: apiClient, user: user }} />\n          <ProtectedRoute exact path=\"/events/add\"\n            component={AddEvent} loggedIn={loggedIn}\n            props={{ apiClient: apiClient, user: user }} />\n          <ProtectedRoute exact path=\"/events/update/:id\"\n            component={UpdateEvent} loggedIn={loggedIn}\n            props={{ apiClient: apiClient, user: user, events: events }} />\n          <ProtectedRoute exact path=\"/profile\"\n            component={AccountPage} loggedIn={loggedIn}\n            props={{ logout: logoutFunction, user: user, events: events, apiClient: apiClient}} />\n        </Switch>\n      </Router>\n    </div>\n  )\n}\nexport default App\n","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\reportWebVitals.js",[],"C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\apiClient.js",[],"C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\components\\protectedRoute.js",[],"C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\pages\\index.js",[],"C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\pages\\LoginPage.js",[],"C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\pages\\AddEvent.js",[],"C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\pages\\AccountPage.js",[],"C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\pages\\EventsPage.js",["85"],"import React, { useState, useEffect } from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport HeaderNav from '../components/HeaderNav'\r\nimport EventsTable from '../components/EventsTable'\r\nimport EventsFilterBar from '../components/EventsFilterBar'\r\n\r\n\r\nlet EventsPage = ({ apiClient, user }) => {\r\n    const [events, setEvents] = useState([])\r\n    let fetchEvents = async () => {\r\n        let events = await apiClient.getEvents();\r\n        setEvents(events.data)\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchEvents()\r\n    }, []);\r\n\r\n    let favouriteEvent = (id) => {\r\n        let [event] = events.filter(event => event._id === id);\r\n        event.favourite = !event.favourite\r\n        apiClient.updateEvent(id, event)\r\n            .then(() => {\r\n                fetchEvents()\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <HeaderNav />\r\n            <Container>\r\n                <EventsFilterBar />\r\n                <EventsTable allEvents={events} apiClient={apiClient} favouriteEvent={favouriteEvent}/>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EventsPage","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\pages\\UpdateEvent.js",[],"C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\components\\login.js",[],"C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\components\\HeaderNav.js",[],"C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\components\\EventsTable.js",[],"C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\components\\EventsFilterBar.js",[],"C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\components\\index.js",[],"C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\components\\AccountDetails.js",[],"C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\components\\EventForm.js",[],"C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\components\\UpdateEventForm.js",["86"],"import React, { useState, useEffect } from 'react'\r\nimport toastr from 'toastr'\r\nimport 'toastr/build/toastr.min.css'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { Link, Redirect } from 'react-router-dom'\r\n\r\nlet UpdateEventForm = ({ eventId, apiClient }) => {\r\n    const [eventDetails, setEventDetails] = useState({\r\n        _id: \"\",\r\n        date: \"\",\r\n        description: \"\",\r\n        favourite: undefined,\r\n        location: \"\",\r\n        name: \"\",\r\n        time: \"\",\r\n        user: \"\"\r\n    })\r\n    const [redirect, setRedirect] = useState(false)\r\n\r\n    useEffect(() => {\r\n        apiClient.getEvent(eventId)\r\n            .then(({ data }) => {\r\n                const event = data[0]\r\n                setEventDetails({\r\n                    _id: event._id,\r\n                    date: event.date,\r\n                    description: event.description,\r\n                    favourite: event.favourite,\r\n                    location: event.location,\r\n                    name: event.name,\r\n                    time: event.time,\r\n                    user: event.user,\r\n                })\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n    }, [])\r\n\r\n    let updateForm = (e) => {\r\n        e.preventDefault();\r\n        const newEvent = {\r\n            name: e.currentTarget.name.value,\r\n            location: e.currentTarget.location.value,\r\n            time: e.currentTarget.time.value,\r\n            date: e.currentTarget.date.value,\r\n            description: e.currentTarget.description.value\r\n        }\r\n        setEventDetails((prevState) => ({\r\n            ...prevState,\r\n            ...newEvent\r\n        }))\r\n    }\r\n\r\n    let submitForm = (e) => {\r\n        e.preventDefault();\r\n        apiClient.updateEvent(eventDetails._id, eventDetails)\r\n            .then(() => {\r\n                toastr.success(\"Event updated\")\r\n                setRedirect(true)\r\n            })\r\n            .catch(err => {\r\n                console.error(err)\r\n            })\r\n\r\n    }\r\n\r\n    let deleteEvent = (id) => {\r\n        apiClient.deleteEvent(id)\r\n            .then(() => {\r\n                toastr.success(\"Event deleted\")\r\n                setRedirect(true)\r\n            })\r\n            .catch(err => {\r\n                toastr.danger(\"Unable to delete event\")\r\n            })\r\n    }\r\n\r\n    if (redirect) {\r\n        return <Redirect to=\"/events\" />\r\n    } else {\r\n        return (\r\n            <Form className=\"mb-5\" onChange={(e) => updateForm(e)} onSubmit={(e) => submitForm(e)}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"name\">Event Name</label>\r\n                    <input value={eventDetails.name} type=\"text\" style={{ width: \"100%\" }} className=\"input-styled\" name=\"name\" required></input>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"location\">Event Location</label>\r\n                    <input value={eventDetails.location} type=\"text\" style={{ width: \"100%\" }} className=\"input-styled\" name=\"location\" required></input>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label htmlFor=\"date\">Event Date</label>\r\n                        <input value={eventDetails.date} type=\"date\" name=\"date\" style={{ width: \"100%\" }} className=\"input-styled\" required></input>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label htmlFor=\"time\">Event Time</label>\r\n                        <input value={eventDetails.time} type=\"time\" name=\"time\" style={{ width: \"100%\" }} className=\"input-styled\" required></input>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"description\">Event Description</label>\r\n                    <textarea value={eventDetails.description} style={{ width: \"100%\" }} className=\"input-styled\" name=\"description\" rows=\"3\" />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn button mr-3\">Update Event</button>\r\n                <button onClick={() => deleteEvent(eventDetails._id)} className=\"btn button-delete mr-3\">Delete Event</button>\r\n                <Link to=\"/events\">\r\n                    <Button className=\"btn\" variant=\"outline-light\" >Cancel</Button>\r\n                </Link>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UpdateEventForm",{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":37,"column":6,"nodeType":"93","endLine":37,"endColumn":8,"suggestions":"94"},{"ruleId":"91","severity":1,"message":"92","line":17,"column":8,"nodeType":"93","endLine":17,"endColumn":10,"suggestions":"95"},{"ruleId":"91","severity":1,"message":"96","line":38,"column":8,"nodeType":"93","endLine":38,"endColumn":10,"suggestions":"97"},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchEvents'. Either include it or remove the dependency array.","ArrayExpression",["100"],["101"],"React Hook useEffect has missing dependencies: 'apiClient' and 'eventId'. Either include them or remove the dependency array.",["102"],"no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},{"desc":"103","fix":"105"},{"desc":"106","fix":"107"},"Update the dependencies array to be: [fetchEvents]",{"range":"108","text":"109"},{"range":"110","text":"109"},"Update the dependencies array to be: [apiClient, eventId]",{"range":"111","text":"112"},[1084,1086],"[fetchEvents]",[540,542],[1200,1202],"[apiClient, eventId]"]