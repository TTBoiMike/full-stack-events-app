[{"C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\index.js":"1","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\App.js":"2","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\reportWebVitals.js":"3","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\apiClient.js":"4","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\components\\protectedRoute.js":"5","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\pages\\index.js":"6","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\pages\\LoginPage.js":"7","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\pages\\AddEvent.js":"8","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\pages\\AccountPage.js":"9","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\pages\\EventsPage.js":"10","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\pages\\UpdateEvent.js":"11","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\components\\login.js":"12","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\components\\HeaderNav.js":"13","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\components\\EventsTable.js":"14","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\components\\EventsFilterBar.js":"15","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\components\\index.js":"16","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\components\\AccountDetails.js":"17","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\components\\EventForm.js":"18","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\components\\UpdateEventForm.js":"19","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\filter.js":"20"},{"size":478,"mtime":1616437501677,"results":"21","hashOfConfig":"22"},{"size":2590,"mtime":1616437501644,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"22"},{"size":2111,"mtime":1616437501648,"results":"25","hashOfConfig":"22"},{"size":372,"mtime":1616437501673,"results":"26","hashOfConfig":"22"},{"size":267,"mtime":1616437501722,"results":"27","hashOfConfig":"22"},{"size":237,"mtime":1616437501720,"results":"28","hashOfConfig":"22"},{"size":398,"mtime":1616437501718,"results":"29","hashOfConfig":"22"},{"size":405,"mtime":1616437501679,"results":"30","hashOfConfig":"22"},{"size":2178,"mtime":1616437501719,"results":"31","hashOfConfig":"22"},{"size":463,"mtime":1616437501722,"results":"32","hashOfConfig":"22"},{"size":2304,"mtime":1616437501671,"results":"33","hashOfConfig":"22"},{"size":1009,"mtime":1616437501664,"results":"34","hashOfConfig":"22"},{"size":1876,"mtime":1616437501662,"results":"35","hashOfConfig":"22"},{"size":1199,"mtime":1616437501660,"results":"36","hashOfConfig":"22"},{"size":341,"mtime":1616437501668,"results":"37","hashOfConfig":"22"},{"size":1790,"mtime":1616437501656,"results":"38","hashOfConfig":"22"},{"size":2838,"mtime":1616437501658,"results":"39","hashOfConfig":"22"},{"size":4408,"mtime":1616437589276,"results":"40","hashOfConfig":"22"},{"size":0,"mtime":1616437501674,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1vooxau",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\index.js",[],["88","89"],"C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\App.js",["90"],"import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css'\nimport 'toastr/build/toastr.min.css';\nimport ApiClient from './apiClient'\nimport { AccountPage, AddEvent, UpdateEvent, EventsPage, LoginPage } from './pages'\nimport ProtectedRoute from './components/protectedRoute'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\n\nlet App = () => {\n  const [loggedIn, loggedInHandler] = useState(false)\n  const [user, setUser] = useState({})\n  const [allEvents, setAllEvents] = useState([])\n\n  let apiClient = new ApiClient(\n    () => window.localStorage.getItem(\"EventsAppUserToken\"),\n    () => this.logout()\n  )\n\n\n\n  let fetchEvents = async () => {\n    let events = await apiClient.getEvents();\n    setAllEvents(events.data)\n  };\n\n\n  useEffect(() => {\n    fetchEvents()\n    if (localStorage.getItem(\"EventsAppUserToken\")) {\n      let user = localStorage.getItem(\"EventsAppUser\")\n      setUser(JSON.parse(user))\n      loggedInHandler(true)\n    } else {\n      loggedInHandler(false)\n    }\n  }, []);\n\n\n  let loginFunction = (user, token) => {\n    setUser(user)\n    window.localStorage.setItem(\"EventsAppUser\", JSON.stringify(user))\n    window.localStorage.setItem(\"EventsAppUserToken\", token)\n    loggedInHandler(true)\n  }\n\n  let logoutFunction = () => {\n    window.localStorage.removeItem(\"EventsAppUser\")\n    window.localStorage.removeItem(\"EventsAppUserToken\")\n    loggedInHandler(false)\n    setUser({})\n  }\n\n\n  return (\n    <div id=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/full-stack-events-app/\" render={() => <LoginPage apiClient={apiClient} loggedIn={loggedIn} logInFunc={loginFunction} />} />\n          <ProtectedRoute exact path=\"/full-stack-events-app/events\"\n            component={EventsPage} loggedIn={loggedIn}\n            props={{ apiClient: apiClient, user: user }} />\n          <ProtectedRoute exact path=\"/full-stack-events-app/events/add\"\n            component={AddEvent} loggedIn={loggedIn}\n            props={{ apiClient: apiClient, user: user }} />\n          <ProtectedRoute exact path=\"/full-stack-events-app/events/update/:id\"\n            component={UpdateEvent} loggedIn={loggedIn}\n            props={{ apiClient: apiClient, user: user, events: allEvents }} />\n          <ProtectedRoute exact path=\"/full-stack-events-app/profile\"\n            component={AccountPage} loggedIn={loggedIn}\n            props={{ logout: logoutFunction, user: user, events: allEvents, apiClient: apiClient }} />\n        </Switch>\n      </Router>\n    </div>\n  )\n}\nexport default App\n","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\reportWebVitals.js",[],"C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\apiClient.js",[],"C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\components\\protectedRoute.js",[],"C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\pages\\index.js",[],"C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\pages\\LoginPage.js",[],"C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\pages\\AddEvent.js",[],"C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\pages\\AccountPage.js",[],"C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\pages\\EventsPage.js",["91","92"],"import React, { useState, useEffect } from 'react';\nimport Filter from '../filter'\nimport { Container } from 'react-bootstrap';\nimport HeaderNav from '../components/HeaderNav'\nimport EventsTable from '../components/EventsTable'\nimport EventsFilterBar from '../components/EventsFilterBar'\n\n\nlet EventsPage = ({ apiClient, user }) => {\n    let [events, setEvents] = useState([])\n    let [eventsToShow, setEventsToShow] = useState([])\n\n    let fetchEvents = async () => {\n        let events = await apiClient.getEvents();\n        setEvents(events.data)\n        setEventsToShow(events.data)\n    };\n\n    useEffect(() => {\n        fetchEvents()\n    }, []);\n\n    let favouriteEvent = (id) => {\n        let [event] = events.filter(event => event._id === id);\n        event.favourite = !event.favourite\n        apiClient.updateEvent(id, event)\n            .then(() => {\n                fetchEvents()\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n\n    let filterEvents = (filterBy) => {\n        if (filterBy === \"favourites\") {\n            let favouritedEvents = events.filter(event => event.favourite)\n            setEventsToShow(favouritedEvents)\n        } else if (filterBy === \"upcoming\") {\n            let today = new Date()\n            let dd = String(today.getDate()).padStart(2, '0');\n            let mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n            let yyyy = today.getFullYear();\n            today = mm + '/' + dd + '/' + yyyy;\n            console.log(today)\n            let filterByDate = events.filter(event => new Date(event.date) > new Date(today))\n            let chronoDates = filterByDate.sort((a, b) => new Date(a.date) - new Date(b.date))\n            setEventsToShow(chronoDates)\n        } else {\n            setEventsToShow(events)\n        }\n    }\n\n    return (\n        <>\n            <HeaderNav />\n            <Container>\n                <EventsFilterBar filterEvents={filterEvents} allEvents={events} />\n                <EventsTable events={eventsToShow} apiClient={apiClient} favouriteEvent={favouriteEvent} />\n            </Container>\n        </>\n    )\n}\n\nexport default EventsPage","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\pages\\UpdateEvent.js",[],"C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\components\\login.js",["93"],"import React, { useState } from 'react';\nimport { Card, Form, Container, Button } from 'react-bootstrap';\nimport Loader from '../assets/loading-gif.gif'\n\nlet Login = (props) => {\n    // disabled login button to prevent multiple requests\n    let [disabled, setDisabled] = useState(false)\n\n    let handleLogin = (e) => {\n        e.preventDefault();\n        setDisabled(true)\n        props.apiClient.logIn(e.target.username.value, e.target.password.value)\n            .then(response => {\n                console.log(response)\n                const user = { username: response.data._doc.username, id: response.data._doc._id }\n                props.logInFunc(user, response.data.token)\n                setDisabled(false)\n            })\n            .catch(err => {\n                setDisabled(false)\n                if (err.response.status === 401) {\n                    alert(\"Username or password incorrect\")\n                } else {\n                    alert(\"Sorry. Unable to log in at the moment.\")\n                }\n            })\n    }\n\n    return (\n        <Container className=\"mt-5 d-flex justify-content-center\">\n            <Card style={{ width: '18rem' }}>\n                <Card.Header>\n                    Login\n                </Card.Header>\n                <Card.Body>\n                    <Form onSubmit={(e) => handleLogin(e)}>\n                        <Form.Group controlId=\"formBasicEmail\" id=\"login-form\">\n                            <input style={{ width: \"100%\" }} placeholder=\"Username\" className=\"input-styled\" type=\"username\" name=\"username\" />\n                        </Form.Group>\n                        <Form.Group controlId=\"formBasicPassword\">\n                            <input style={{ width: \"100%\" }} placeholder=\"Password\" className=\"input-styled\" type=\"Password\" name=\"password\" />\n                        </Form.Group>\n                        <button style={{ width: \"100%\" }} className=\"my-2 btn button\" type=\"submit\" disabled={disabled}>\n                            {disabled ? <img id=\"loader\" src={Loader} alt=\"...loading\" /> : \"login\"}\n                        </button>\n                    </Form>\n                    <small>Username: mike<br /> Password: test</small>\n                </Card.Body>\n            </Card>\n        </Container>\n    )\n}\n\nexport default Login","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\components\\HeaderNav.js",[],"C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\components\\EventsTable.js",[],"C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\components\\EventsFilterBar.js",[],"C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\components\\index.js",[],"C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\components\\AccountDetails.js",[],"C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\components\\EventForm.js",[],["94","95"],"C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\components\\UpdateEventForm.js",["96"],"import React, { useState, useEffect } from 'react'\nimport toastr from 'toastr'\nimport 'toastr/build/toastr.min.css'\nimport { Form, Button } from 'react-bootstrap'\nimport { Link, Redirect } from 'react-router-dom'\n\nlet UpdateEventForm = ({ eventId, apiClient }) => {\n    const [eventDetails, setEventDetails] = useState({\n        _id: \"\",\n        date: \"\",\n        description: \"\",\n        favourite: undefined,\n        location: \"\",\n        name: \"\",\n        time: \"\",\n        user: \"\"\n    })\n    const [redirect, setRedirect] = useState(false)\n\n    useEffect(() => {\n        apiClient.getEvent(eventId)\n            .then(({ data }) => {\n                const event = data[0]\n                setEventDetails({\n                    _id: event._id,\n                    date: event.date,\n                    description: event.description,\n                    favourite: event.favourite,\n                    location: event.location,\n                    name: event.name,\n                    time: event.time,\n                    user: event.user,\n                })\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }, [])\n\n    let updateForm = (e) => {\n        e.preventDefault();\n        const newEvent = {\n            name: e.currentTarget.name.value,\n            location: e.currentTarget.location.value,\n            time: e.currentTarget.time.value,\n            date: e.currentTarget.date.value,\n            description: e.currentTarget.description.value\n        }\n        setEventDetails((prevState) => ({\n            ...prevState,\n            ...newEvent\n        }))\n    }\n\n    let submitForm = (e) => {\n        e.preventDefault();\n        apiClient.updateEvent(eventDetails._id, eventDetails)\n            .then(() => {\n                toastr.success(\"Event updated\")\n                setRedirect(true)\n            })\n            .catch(err => {\n                console.error(err)\n            })\n\n    }\n\n    let deleteEvent = (id) => {\n        apiClient.deleteEvent(id)\n            .then(() => {\n                toastr.success(\"Event deleted\")\n                setRedirect(true)\n            })\n            .catch(err => {\n                toastr.danger(\"Unable to delete event\")\n            })\n    }\n\n    if (redirect) {\n        return <Redirect to=\"/full-stack-events-app/events\" />\n    } else {\n        return (\n            <Form className=\"mb-5\" onChange={(e) => updateForm(e)} onSubmit={(e) => submitForm(e)}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"name\">Event Name</label>\n                    <input value={eventDetails.name} type=\"text\" style={{ width: \"100%\" }} className=\"input-styled\" name=\"name\" required></input>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"location\">Event Location</label>\n                    <input value={eventDetails.location} type=\"text\" style={{ width: \"100%\" }} className=\"input-styled\" name=\"location\" required></input>\n                </div>\n                <div className=\"form-group row\">\n                    <div className=\"col\">\n                        <label htmlFor=\"date\">Event Date</label>\n                        <input value={eventDetails.date} type=\"date\" name=\"date\" style={{ width: \"100%\" }} className=\"input-styled\" required></input>\n                    </div>\n                    <div className=\"col\">\n                        <label htmlFor=\"time\">Event Time</label>\n                        <input value={eventDetails.time} type=\"time\" name=\"time\" style={{ width: \"100%\" }} className=\"input-styled\" required></input>\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"description\">Event Description</label>\n                    <textarea value={eventDetails.description} style={{ width: \"100%\" }} className=\"input-styled\" name=\"description\" rows=\"3\" />\n                </div>\n                <button type=\"submit\" className=\"btn button mr-3\">Update Event</button>\n                <button onClick={() => deleteEvent(eventDetails._id)} className=\"btn button-delete mr-3\">Delete Event</button>\n                <Link to=\"/full-stack-events-app/events\">\n                    <Button className=\"btn\" variant=\"outline-light\" >Cancel</Button>\n                </Link>\n            </Form>\n        )\n    }\n}\n\nexport default UpdateEventForm\n","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\filter.js",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":38,"column":6,"nodeType":"103","endLine":38,"endColumn":8,"suggestions":"104"},{"ruleId":"105","severity":1,"message":"106","line":2,"column":8,"nodeType":"107","messageId":"108","endLine":2,"endColumn":14},{"ruleId":"101","severity":1,"message":"102","line":21,"column":8,"nodeType":"103","endLine":21,"endColumn":10,"suggestions":"109"},{"ruleId":"105","severity":1,"message":"110","line":2,"column":33,"nodeType":"107","messageId":"108","endLine":2,"endColumn":39},{"ruleId":"97","replacedBy":"111"},{"ruleId":"99","replacedBy":"112"},{"ruleId":"101","severity":1,"message":"113","line":38,"column":8,"nodeType":"103","endLine":38,"endColumn":10,"suggestions":"114"},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchEvents'. Either include it or remove the dependency array.","ArrayExpression",["117"],"no-unused-vars","'Filter' is defined but never used.","Identifier","unusedVar",["118"],"'Button' is defined but never used.",["115"],["116"],"React Hook useEffect has missing dependencies: 'apiClient' and 'eventId'. Either include them or remove the dependency array.",["119"],"no-global-assign","no-unsafe-negation",{"desc":"120","fix":"121"},{"desc":"120","fix":"122"},{"desc":"123","fix":"124"},"Update the dependencies array to be: [fetchEvents]",{"range":"125","text":"126"},{"range":"127","text":"126"},"Update the dependencies array to be: [apiClient, eventId]",{"range":"128","text":"129"},[1072,1074],"[fetchEvents]",[646,648],[1163,1165],"[apiClient, eventId]"]