[{"C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\index.js":"1","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\App.js":"2","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\reportWebVitals.js":"3","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\apiClient.js":"4","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\components\\protectedRoute.js":"5","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\pages\\index.js":"6","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\pages\\LoginPage.js":"7","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\pages\\AddEvent.js":"8","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\pages\\AccountPage.js":"9","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\pages\\EventsPage.js":"10","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\pages\\UpdateEvent.js":"11","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\components\\login.js":"12","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\components\\HeaderNav.js":"13","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\components\\EventsTable.js":"14","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\components\\EventsFilterBar.js":"15","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\components\\index.js":"16","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\components\\AccountDetails.js":"17","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\components\\EventForm.js":"18","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\components\\UpdateEventForm.js":"19","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\filter.js":"20"},{"size":478,"mtime":1616095816266,"results":"21","hashOfConfig":"22"},{"size":2480,"mtime":1616354670646,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"22"},{"size":2194,"mtime":1616327876446,"results":"25","hashOfConfig":"22"},{"size":358,"mtime":1616239677577,"results":"26","hashOfConfig":"22"},{"size":271,"mtime":1616084013856,"results":"27","hashOfConfig":"22"},{"size":244,"mtime":1616087210079,"results":"28","hashOfConfig":"22"},{"size":413,"mtime":1616235095031,"results":"29","hashOfConfig":"22"},{"size":419,"mtime":1616259023183,"results":"30","hashOfConfig":"22"},{"size":2243,"mtime":1616357852576,"results":"31","hashOfConfig":"22"},{"size":480,"mtime":1616257507407,"results":"32","hashOfConfig":"22"},{"size":2304,"mtime":1616436763371,"results":"33","hashOfConfig":"22"},{"size":1010,"mtime":1616096668109,"results":"34","hashOfConfig":"22"},{"size":1910,"mtime":1616357391158,"results":"35","hashOfConfig":"22"},{"size":1224,"mtime":1616357886622,"results":"36","hashOfConfig":"22"},{"size":346,"mtime":1616235476600,"results":"37","hashOfConfig":"22"},{"size":1850,"mtime":1616328482095,"results":"38","hashOfConfig":"22"},{"size":2883,"mtime":1616235272023,"results":"39","hashOfConfig":"22"},{"size":4478,"mtime":1616257211224,"results":"40","hashOfConfig":"22"},{"size":0,"mtime":1616357044357,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1qgkup2",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\index.js",[],["86","87"],"C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\App.js",["88"],"import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css'\nimport 'toastr/build/toastr.min.css';\nimport ApiClient from './apiClient'\nimport { AccountPage, AddEvent, UpdateEvent, EventsPage, LoginPage } from './pages'\nimport ProtectedRoute from './components/protectedRoute'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\n\nlet App = () => {\n  const [loggedIn, loggedInHandler] = useState(false)\n  const [user, setUser] = useState({})\n  const [allEvents, setAllEvents] = useState([])\n\n  let apiClient = new ApiClient(\n    () => window.localStorage.getItem(\"EventsAppUserToken\"),\n    () => this.logout()\n  )\n\n\n\n  let fetchEvents = async () => {\n    let events = await apiClient.getEvents();\n    setAllEvents(events.data)\n  };\n\n\n  useEffect(() => {\n    fetchEvents()\n    if (localStorage.getItem(\"EventsAppUserToken\")) {\n      let user = localStorage.getItem(\"EventsAppUser\")\n      setUser(JSON.parse(user))\n      loggedInHandler(true)\n    } else {\n      loggedInHandler(false)\n    }\n  }, []);\n\n\n  let loginFunction = (user, token) => {\n    setUser(user)\n    window.localStorage.setItem(\"EventsAppUser\", JSON.stringify(user))\n    window.localStorage.setItem(\"EventsAppUserToken\", token)\n    loggedInHandler(true)\n  }\n\n  let logoutFunction = () => {\n    window.localStorage.removeItem(\"EventsAppUser\")\n    window.localStorage.removeItem(\"EventsAppUserToken\")\n    loggedInHandler(false)\n    setUser({})\n  }\n\n\n  return (\n    <div id=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" render={() => <LoginPage apiClient={apiClient} loggedIn={loggedIn} logInFunc={loginFunction} />} />\n          <ProtectedRoute exact path=\"/events\"\n            component={EventsPage} loggedIn={loggedIn}\n            props={{ apiClient: apiClient, user: user }} />\n          <ProtectedRoute exact path=\"/events/add\"\n            component={AddEvent} loggedIn={loggedIn}\n            props={{ apiClient: apiClient, user: user }} />\n          <ProtectedRoute exact path=\"/events/update/:id\"\n            component={UpdateEvent} loggedIn={loggedIn}\n            props={{ apiClient: apiClient, user: user, events: allEvents }} />\n          <ProtectedRoute exact path=\"/profile\"\n            component={AccountPage} loggedIn={loggedIn}\n            props={{ logout: logoutFunction, user: user, events: allEvents, apiClient: apiClient }} />\n        </Switch>\n      </Router>\n    </div>\n  )\n}\nexport default App\n","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\reportWebVitals.js",[],"C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\apiClient.js",[],"C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\components\\protectedRoute.js",[],"C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\pages\\index.js",[],"C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\pages\\LoginPage.js",[],"C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\pages\\AddEvent.js",[],"C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\pages\\AccountPage.js",[],"C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\pages\\EventsPage.js",["89","90"],"import React, { useState, useEffect } from 'react';\r\nimport Filter from '../filter'\r\nimport { Container } from 'react-bootstrap';\r\nimport HeaderNav from '../components/HeaderNav'\r\nimport EventsTable from '../components/EventsTable'\r\nimport EventsFilterBar from '../components/EventsFilterBar'\r\n\r\n\r\nlet EventsPage = ({ apiClient, user }) => {\r\n    let [events, setEvents] = useState([])\r\n    let [eventsToShow, setEventsToShow] = useState([])\r\n\r\n    let fetchEvents = async () => {\r\n        let events = await apiClient.getEvents();\r\n        setEvents(events.data)\r\n        setEventsToShow(events.data)\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchEvents()\r\n    }, []);\r\n\r\n    let favouriteEvent = (id) => {\r\n        let [event] = events.filter(event => event._id === id);\r\n        event.favourite = !event.favourite\r\n        apiClient.updateEvent(id, event)\r\n            .then(() => {\r\n                fetchEvents()\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n\r\n    let filterEvents = (filterBy) => {\r\n        if (filterBy === \"favourites\") {\r\n            let favouritedEvents = events.filter(event => event.favourite)\r\n            setEventsToShow(favouritedEvents)\r\n        } else if (filterBy === \"upcoming\") {\r\n            let today = new Date()\r\n            let dd = String(today.getDate()).padStart(2, '0');\r\n            let mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n            let yyyy = today.getFullYear();\r\n            today = mm + '/' + dd + '/' + yyyy;\r\n            console.log(today)\r\n            let filterByDate = events.filter(event => new Date(event.date) > new Date(today))\r\n            let chronoDates = filterByDate.sort((a, b) => new Date(a.date) - new Date(b.date))\r\n            setEventsToShow(chronoDates)\r\n        } else {\r\n            setEventsToShow(events)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <HeaderNav />\r\n            <Container>\r\n                <EventsFilterBar filterEvents={filterEvents} allEvents={events} />\r\n                <EventsTable events={eventsToShow} apiClient={apiClient} favouriteEvent={favouriteEvent} />\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EventsPage","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\pages\\UpdateEvent.js",[],"C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\components\\login.js",["91"],"C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\components\\HeaderNav.js",[],"C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\components\\EventsTable.js",[],"C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\components\\EventsFilterBar.js",[],"C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\components\\index.js",[],"C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\components\\AccountDetails.js",[],"C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\components\\EventForm.js",[],"C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\components\\UpdateEventForm.js",["92"],"import React, { useState, useEffect } from 'react'\r\nimport toastr from 'toastr'\r\nimport 'toastr/build/toastr.min.css'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { Link, Redirect } from 'react-router-dom'\r\n\r\nlet UpdateEventForm = ({ eventId, apiClient }) => {\r\n    const [eventDetails, setEventDetails] = useState({\r\n        _id: \"\",\r\n        date: \"\",\r\n        description: \"\",\r\n        favourite: undefined,\r\n        location: \"\",\r\n        name: \"\",\r\n        time: \"\",\r\n        user: \"\"\r\n    })\r\n    const [redirect, setRedirect] = useState(false)\r\n\r\n    useEffect(() => {\r\n        apiClient.getEvent(eventId)\r\n            .then(({ data }) => {\r\n                const event = data[0]\r\n                setEventDetails({\r\n                    _id: event._id,\r\n                    date: event.date,\r\n                    description: event.description,\r\n                    favourite: event.favourite,\r\n                    location: event.location,\r\n                    name: event.name,\r\n                    time: event.time,\r\n                    user: event.user,\r\n                })\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n    }, [])\r\n\r\n    let updateForm = (e) => {\r\n        e.preventDefault();\r\n        const newEvent = {\r\n            name: e.currentTarget.name.value,\r\n            location: e.currentTarget.location.value,\r\n            time: e.currentTarget.time.value,\r\n            date: e.currentTarget.date.value,\r\n            description: e.currentTarget.description.value\r\n        }\r\n        setEventDetails((prevState) => ({\r\n            ...prevState,\r\n            ...newEvent\r\n        }))\r\n    }\r\n\r\n    let submitForm = (e) => {\r\n        e.preventDefault();\r\n        apiClient.updateEvent(eventDetails._id, eventDetails)\r\n            .then(() => {\r\n                toastr.success(\"Event updated\")\r\n                setRedirect(true)\r\n            })\r\n            .catch(err => {\r\n                console.error(err)\r\n            })\r\n\r\n    }\r\n\r\n    let deleteEvent = (id) => {\r\n        apiClient.deleteEvent(id)\r\n            .then(() => {\r\n                toastr.success(\"Event deleted\")\r\n                setRedirect(true)\r\n            })\r\n            .catch(err => {\r\n                toastr.danger(\"Unable to delete event\")\r\n            })\r\n    }\r\n\r\n    if (redirect) {\r\n        return <Redirect to=\"/events\" />\r\n    } else {\r\n        return (\r\n            <Form className=\"mb-5\" onChange={(e) => updateForm(e)} onSubmit={(e) => submitForm(e)}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"name\">Event Name</label>\r\n                    <input value={eventDetails.name} type=\"text\" style={{ width: \"100%\" }} className=\"input-styled\" name=\"name\" required></input>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"location\">Event Location</label>\r\n                    <input value={eventDetails.location} type=\"text\" style={{ width: \"100%\" }} className=\"input-styled\" name=\"location\" required></input>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label htmlFor=\"date\">Event Date</label>\r\n                        <input value={eventDetails.date} type=\"date\" name=\"date\" style={{ width: \"100%\" }} className=\"input-styled\" required></input>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label htmlFor=\"time\">Event Time</label>\r\n                        <input value={eventDetails.time} type=\"time\" name=\"time\" style={{ width: \"100%\" }} className=\"input-styled\" required></input>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"description\">Event Description</label>\r\n                    <textarea value={eventDetails.description} style={{ width: \"100%\" }} className=\"input-styled\" name=\"description\" rows=\"3\" />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn button mr-3\">Update Event</button>\r\n                <button onClick={() => deleteEvent(eventDetails._id)} className=\"btn button-delete mr-3\">Delete Event</button>\r\n                <Link to=\"/events\">\r\n                    <Button className=\"btn\" variant=\"outline-light\" >Cancel</Button>\r\n                </Link>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UpdateEventForm","C:\\Users\\micha\\Javascript-course\\mongoDB\\full-stack-events-app\\src\\filter.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":38,"column":6,"nodeType":"99","endLine":38,"endColumn":8,"suggestions":"100"},{"ruleId":"101","severity":1,"message":"102","line":2,"column":8,"nodeType":"103","messageId":"104","endLine":2,"endColumn":14},{"ruleId":"97","severity":1,"message":"98","line":21,"column":8,"nodeType":"99","endLine":21,"endColumn":10,"suggestions":"105"},{"ruleId":"101","severity":1,"message":"106","line":2,"column":33,"nodeType":"103","messageId":"104","endLine":2,"endColumn":39},{"ruleId":"97","severity":1,"message":"107","line":38,"column":8,"nodeType":"99","endLine":38,"endColumn":10,"suggestions":"108"},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchEvents'. Either include it or remove the dependency array.","ArrayExpression",["111"],"no-unused-vars","'Filter' is defined but never used.","Identifier","unusedVar",["112"],"'Button' is defined but never used.","React Hook useEffect has missing dependencies: 'apiClient' and 'eventId'. Either include them or remove the dependency array.",["113"],"no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},{"desc":"114","fix":"116"},{"desc":"117","fix":"118"},"Update the dependencies array to be: [fetchEvents]",{"range":"119","text":"120"},{"range":"121","text":"120"},"Update the dependencies array to be: [apiClient, eventId]",{"range":"122","text":"123"},[1072,1074],"[fetchEvents]",[666,668],[1200,1202],"[apiClient, eventId]"]